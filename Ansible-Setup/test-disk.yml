---
- name: get disk info from pure
  gather_facts: false
  hosts: purefa
  tasks:
    - name: populate API keys for each pure module
      set_fact:
        pure_credentials: &pure_api_info
          fa_url: "{{ ansible_host }}"
          api_token: "{{ purefa_api_token }}"

    - name: set fact for which database to restore
      # there are 5 databases that can be referenced by db1, db2, db3, db4, or db5
      set_fact:
        db_choice: "{{ db_choice | default(default_db) }}"

    - name: set fact for which volume to mount to windows
      set_fact:
        win_volume_name: "{{ item.value.volume_name }}"
      when: item.key == db_choice
      loop: "{{ volumes | dict2items }}"

    - name: gather purefa2 volume facts
      delegate_to: localhost
      purestorage.flasharray.purefa_info:
        <<: *pure_api_info
        gather_subset: volumes
      register: purefa2_info
      when: inventory_hostname == 'purefa2'

    - name: Set NAA LUN Serial Variable for purefa2
      set_fact:
        purefa2_vol_serial: "{{ purefa2_info['purefa_info']['volumes'][win_volume_name]['serial'] | upper }}"
      when: inventory_hostname == 'purefa2'


- name: test windows disks manipulation
  gather_facts: false
  hosts: winsrv02.lab.local


  tasks:
    - name: set purefa2 volume serial number
      set_fact:
        purefa2_vol_serial: "{{ hostvars['purefa2']['purefa2_vol_serial'] }}"
      run_once: True

    - name: Gather Facts
      win_disk_facts:

    - name: Query for Individual Purefa2 Disk
      #hosts: winsrv02.lab.local
      set_fact:
        pure_disk_info: "{{ (ansible_disks | json_query(query))[0] }}"
      vars:
        query: "[?physical_disk.serial_number=='{{ purefa2_vol_serial }}']"

    #- name: offline disk
    #  win_shell: !unsafe |
    #    Set-Disk -Number "{{ pure_disk_info.number }}" -IsOffline $True

    - name: online disk
      win_shell: !unsafe |
        Set-Disk -Number "{{ pure_disk_info.number }}" -IsOffline $False